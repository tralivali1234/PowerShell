<?xml version="1.0" encoding="utf-8"?>
<root>
<!--
    This code was generated by the tools\ResxGen\ResxGen.ps1 run against PowerShell-Core-Instrumentation.man.
    To add or change logged events and the associated resources, edit PowerShell-Core-Instrumentation.man
    then rerun ResxGen.ps1 to produce an updated CS and Resx file.
-->
<xsd:schema id="root" xmlns="" xmlns:xsd="https://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
<xsd:import namespace="https://www.w3.org/XML/1998/namespace" />
<xsd:element name="root" msdata:IsDataSet="true">
  <xsd:complexType>
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="metadata">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="value" type="xsd:string" minOccurs="0" />
          </xsd:sequence>
          <xsd:attribute name="name" use="required" type="xsd:string" />
          <xsd:attribute name="type" type="xsd:string" />
          <xsd:attribute name="mimetype" type="xsd:string" />
          <xsd:attribute ref="xml:space" />
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="assembly">
        <xsd:complexType>
          <xsd:attribute name="alias" type="xsd:string" />
          <xsd:attribute name="name" type="xsd:string" />
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="data">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
            <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
          </xsd:sequence>
          <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
          <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
          <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
          <xsd:attribute ref="xml:space" />
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="resheader">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
          </xsd:sequence>
          <xsd:attribute name="name" type="xsd:string" use="required" />
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
</xsd:element>
</xsd:schema>
<resheader name="resmimetype">
    <value>text/microsoft-resx</value>
</resheader>
<resheader name="version">
    <value>2.0</value>
</resheader>
<resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
</resheader>
<resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
</resheader>
<data name="MissingEventIdMessage" xml:space="preserve">
    <value>A message was not found for event id PowerShell-Core-Instrumentation.man.</value>
</data>
<data name="PS_PROVIDEReventE_O_ScheduledJobStarted" xml:space="preserve">
    <value>Scheduled Job {0} started at {1} %n</value>
</data>
<data name="PS_PROVIDEReventE_O_ScheduledJobCompleted" xml:space="preserve">
    <value>Scheduled Job {0} completed at {1} with state {2} %n</value>
</data>
<data name="PS_PROVIDEReventE_O_ScheduledJobException" xml:space="preserve">
    <value>Scheduled Job Exception {0}: %n Message: {1} %n StackTrace: {2} %n InnerException: {3} %n</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowPluginStarted" xml:space="preserve">
    <value>Workflow plugin loaded. %n %t EndpointName: {0} %n %t User: {1} %n %t HostingMode: {2} %n %t Protocol: {3} %n %t Configuration: %n {4}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowExecutionStarted" xml:space="preserve">
    <value>Workflow execution started. %n %t WorkflowId: {0} %n %t ManagedNodes: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowStateChanged" xml:space="preserve">
    <value>Workflow state changed. %n %t WorkflowId: {0} %n %t NewState: {1} %n %t OldState: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowPluginRequestedToShutdown" xml:space="preserve">
    <value>Workflow plugin has been requested for a shutdown. %n %t EndpointName: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowPluginRestarted" xml:space="preserve">
    <value>Workflow plugin restarted. %n %t EndpointName: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowWorkflowsResuming" xml:space="preserve">
    <value>Workflow is resuming. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowQuotaViolationDetected" xml:space="preserve">
    <value>A quota limit that was set for the endpoint was exceeded. %n %t EndpointName: {0} %n %t ConfigName: {1} %n %t AllowedValue: {2} %n %t ValueInQuestion: {3}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowWorkflowsResumed" xml:space="preserve">
    <value>Workflow has resumed. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowRunspacePoolCreated" xml:space="preserve">
    <value>Workflow runspace pool was created. %n %t WorkflowId: {0} %n %t ManagedNode: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowActivityExecutionQueued" xml:space="preserve">
    <value>Activity was queued for execution. %n %t WorkflowId: {0} %n %t ActivityName: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowActivityExecutionStarted" xml:space="preserve">
    <value>Activity execution started. %n %t ActivityName: {0} %n %t ActivityTypeName: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowImportingFromXaml" xml:space="preserve">
    <value>Workflow is being imported from a XAML file. %n %t WorkflowId: {0} %n %t XamlFile: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowImportedFromXaml" xml:space="preserve">
    <value>Workflow has been imported from a XAML file. %n %t WorkflowId: {0} %n %t XamlFile: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowImportFromXamlError" xml:space="preserve">
    <value>Workflow could not be imported from a XAML file because of an error. %n %t WorkflowId: {0} %n %t ErrorDescription: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowImportFromXamlValidationStarted" xml:space="preserve">
    <value>Workflow validation started. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowImportFromXamlValidationFinishedSuccessfully" xml:space="preserve">
    <value>Workflow validation succeeded. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowImportFromXamlValidationFinishedWithError" xml:space="preserve">
    <value>Workflow validation failed with error. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowImportFromXamlActivityValidated" xml:space="preserve">
    <value>Workflow activity validated. %n %t WorkflowId: {0} %n %t ActivityDisplayName: {1} %n %t ActivityTypeName: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowImportFromXamlActivityValidationFailed" xml:space="preserve">
    <value>Workflow activity could not be validated. %n %t WorkflowId: {0} %n %t ActivityDisplayName: {1} %n %t ActivityTypeName: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowActivityExecutionFailed" xml:space="preserve">
    <value>Activity execution failed. %n %t WorkflowId: {0} %n %t ActivityName: {1} %n %t FailureDescription: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowRunspaceAvailabilityChanged" xml:space="preserve">
    <value>Runspace availability changed. %n %t RunspaceId: {0} %n %t Availability: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowRunspaceStateChanged" xml:space="preserve">
    <value>Runspace state changed. %n %t RunspaceId: {0} %n %t NewState: {1} %n %t OldState: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowLoadedForExecution" xml:space="preserve">
    <value>Workflow loaded for execution. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowUnloaded" xml:space="preserve">
    <value>Workflow unloaded. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowCancelled" xml:space="preserve">
    <value>Workflow execution cancelled. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowAborted" xml:space="preserve">
    <value>Workflow execution aborted. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowCleanup" xml:space="preserve">
    <value>Workflow cleanup operation executed. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowLoadedFromDisk" xml:space="preserve">
    <value>Persisted workflow loaded from disk. %n %t WorkflowId: {0} %n %t Path: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowDeletedFromDisk" xml:space="preserve">
    <value>Workflow data was deleted from disk. %n %t WorkflowId: {0} %n %t Path: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PRemoveJobStarted" xml:space="preserve">
    <value>Starting remove job. %n %t JobId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PJobStateChanged" xml:space="preserve">
    <value>Job state changed. %n %t JobId: {0} %n %t WorkflowId: {1} %n %t NewState: {2} %n %t OldState: {3}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PJobError" xml:space="preserve">
    <value>Job error. %n %t JobId: {0} %n %t WorkflowId: {1} %n %t ErrorDescription: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowJobCreated" xml:space="preserve">
    <value>Job created for workflow (child job). %n %t ParentJobId: {0} %n %t ChildJobId: {1} %n %t ChildWorkflowId: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PParentJobCreated" xml:space="preserve">
    <value>Parent job created for workflow. %n %t JobId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PJobCreationCompleted" xml:space="preserve">
    <value>All required jobs were created for workflow execution. %n %t JobId: {0} %n %t WorkflowId: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PJobRemoved" xml:space="preserve">
    <value>Child job removed for workflow. %n %t ParentJobId: {0} %n %t ChildJobId: {1} %n %t WorkflowId: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PJobRemoveError" xml:space="preserve">
    <value>An error occurred while removing job. %n %t ParentJobId: {0} %n %t ChildJobId: {1} %n %t WorkflowId: {2} %n %t Error: {3}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PLoadingWorkflowForExecution" xml:space="preserve">
    <value>Loading workflow for execution. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowExecutionFinished" xml:space="preserve">
    <value>Workflow execution finished. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PCancellingWorkflowExecution" xml:space="preserve">
    <value>Cancelling workflow execution. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PAbortingWorkflowExecution" xml:space="preserve">
    <value>Aborting workflow execution. %n %t WorkflowId: {0} %n %t Reason: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PUnloadingWorkflow" xml:space="preserve">
    <value>Unloading workflow. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PForcedWorkflowShutdownStarted" xml:space="preserve">
    <value>Forced workflow shutdown started. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PForcedWorkflowShutdownFinished" xml:space="preserve">
    <value>Forced workflow shutdown finished. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PForcedWorkflowShutdownError" xml:space="preserve">
    <value>An error occurred while forcefully shutting down a workflow. %n %t WorkflowId: {0} %n %t ErrorDescription: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PPersistingWorkflow" xml:space="preserve">
    <value>Persisting workflow to disk. %n %t WorkflowId: {0} %n %t PersistPath: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowPersisted" xml:space="preserve">
    <value>Workflow persisted to disk. %n %t WorkflowId: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowActivityExecutionFinished" xml:space="preserve">
    <value>Activity execution finished. %n %t ActivityName: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowExecutionError" xml:space="preserve">
    <value>Workflow execution error. %n %t WorkflowId: {0} %n %t ErrorDescription: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PEndpointRegistered" xml:space="preserve">
    <value>A new PowerShell endpoint was registered. %n %t EndpointName: {0} %n %t EndpointType: {1} %n %t RegisteredBy: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PEndpointModified" xml:space="preserve">
    <value>Endpoint configuration modified. %n %t EndpointName: {0} %n %t ModifiedBy: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PEndpointUnregistered" xml:space="preserve">
    <value>Endpoint configuration unregistered. %n %t EndpointName: {0} %n %t UnregisteredBy: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PEndpointDisabled" xml:space="preserve">
    <value>Endpoint configuration disabled. %n %t EndpointName: {0} %n %t DisabledBy: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PEndpointEnabled" xml:space="preserve">
    <value>Endpoint configuration enabled. %n %t EndpointName: {0} %n %t EnabledBy: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3POutOfProcessRunspaceStarted" xml:space="preserve">
    <value>Out of process runspace started. %n %t Command: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PParameterSplattingWasPerformed" xml:space="preserve">
    <value>Parameter splatting was performed during workflow execution. %n %t Parameters: {0} %n %t Computers: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PWorkflowEngineStarted" xml:space="preserve">
    <value>Workflow engine started. %n %t EndpointName: {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PWORKFLOW_MANAGER_CHECKPOINTPATH" xml:space="preserve">
    <value>Workflow manager instantiated with %n %t CheckpointPath: {0} %n %t ConfigProviderId: {1} %n %t UserName: {2} %n %t Path: {3}</value>
</data>
<data name="PS_PROVIDEReventE_O_CMDLETS_HOSTNAMERESOLVE" xml:space="preserve">
    <value>Computer Name $null or . resolve to LocalHost</value>
</data>
<data name="PS_PROVIDEReventE_O_CMDLETS_SCHEMERESOLVE" xml:space="preserve">
    <value>Resolving to default scheme http</value>
</data>
<data name="PS_PROVIDEReventE_O_CMDLETS_SHELLRESOLVE" xml:space="preserve">
    <value>Remote shell name resolved to default PowerShellCore</value>
</data>
<data name="PS_PROVIDEReventE_O_COMMAND_HEALTH" xml:space="preserve">
    <value>{2}%n%nContext:%n{0}%n%nUser Data:%n{1}%n</value>
</data>
<data name="PS_PROVIDEReventE_O_ENGINE_HEALTH" xml:space="preserve">
    <value>{2}%n%nContext:%n{0}%n%nUser Data:%n{1}%n</value>
</data>
<data name="PS_PROVIDEReventE_O_PROVIDER_HEALTH" xml:space="preserve">
    <value>{2}%n%nContext:%n{0}%n%nUser Data:%n{1}%n</value>
</data>
<data name="PS_PROVIDEReventE_O_PIPELINE_DETAIL" xml:space="preserve">
    <value>{2}%n%nContext:%n{0}%n%nUser Data:%n{1}%n</value>
</data>
<data name="PS_PROVIDEReventE_O_SCRIPTBLOCK_CREATE_DETAIL" xml:space="preserve">
    <value>Creating Scriptblock text ({0} of {1}):%n{2}%n%nScriptBlock ID: {3}%nPath: {4}</value>
</data>
<data name="PS_PROVIDEReventE_O_SCRIPTBLOCK_INVOKE_START_DETAIL" xml:space="preserve">
    <value>Started invocation of ScriptBlock ID: {0}%nRunspace ID: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_SCRIPTBLOCK_INVOKE_COMPLETE_DETAIL" xml:space="preserve">
    <value>Completed invocation of ScriptBlock ID: {0}%nRunspace ID: {1}</value>
</data>
<data name="PS_PROVIDEReventE_A_COMMAND_LIFECYCLE" xml:space="preserve">
    <value>{2}%n%nContext:%n{0}%n%nUser Data:%n{1}%n</value>
</data>
<data name="PS_PROVIDEReventE_A_ENGINE_LIFECYCLE" xml:space="preserve">
    <value>{2}%n%nContext:%n{0}%n%nUser Data:%n{1}%n</value>
</data>
<data name="PS_PROVIDEReventE_A_PROVIDER_LIFECYCLE" xml:space="preserve">
    <value>{2}%n%nContext:%n{0}%n%nUser Data:%n{1}%n</value>
</data>
<data name="PS_PROVIDEReventE_A_SETTINGS" xml:space="preserve">
    <value>{2}%n%nContext:%n{0}%n%nUser Data:%n{1}%n</value>
</data>
<data name="PS_PROVIDEReventE_A_WriteTransferEvent" xml:space="preserve">
    <value>Correlating activity id's. %n %t CurrentActivityId: {0} %n %t ParentActivityId: {1}</value>
</data>
<data name="PS_PROVIDEReventE_A_ENGINE_TRACE" xml:space="preserve">
    <value>Class Name = {0}%nMethod Name = {1}%nWorkflow GUID = {2}%nMessage = {3}%n{4}%nActivity Name = {5}%nActivity GUID = {6}%nParameters = {7}</value>
</data>
<data name="PS_PROVIDEReventE_O_RUNSPACE_CONSTRUCTOR" xml:space="preserve">
    <value>Creating Runspace object %n %t Instance Id: {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_RUNSPACEPOOL_CONSTRUCTOR" xml:space="preserve">
    <value>Creating RunspacePool object %n %t InstanceId {0} %n %t MinRunspaces {1} %n %t MaxRunspaces {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_RUNSPACEPOOL_OPEN" xml:space="preserve">
    <value>Opening RunspacePool</value>
</data>
<data name="PS_PROVIDEReventE_O_RUNSPACEPOOL_TRANSFER" xml:space="preserve">
    <value>Modifying activity Id and correlating</value>
</data>
<data name="PS_PROVIDEReventE_O_RUNSPACE_STATE_CHANGE" xml:space="preserve">
    <value>Runspace state changed to {0}</value>
</data>
<data name="PS_PROVIDEReventE_O_REMOTE_RUNSPACE_CREATE_RETRY" xml:space="preserve">
    <value>Attempting session creation retry {0} for error code {1} on session Id {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_REMOTE_NAMEDPIPE_LISTENER_START" xml:space="preserve">
    <value>Windows PowerShell has started an IPC listening thread on process: {0} in AppDomain: {1}.</value>
</data>
<data name="PS_PROVIDEReventE_O_REMOTE_NAMEDPIPE_LISTENER_END" xml:space="preserve">
    <value>Windows PowerShell has ended an IPC listening thread on process: {0} in AppDomain: {1}.</value>
</data>
<data name="PS_PROVIDEReventE_O_REMOTE_NAMEDPIPE_LISTENER_ERROR" xml:space="preserve">
    <value>An error has occurred in Windows PowerShell IPC listening thread on process: {0} in AppDomain: {1}.  Error Message: {2}.</value>
</data>
<data name="PS_PROVIDEReventE_O_REMOTE_NAMEDPIPE_CONNECT" xml:space="preserve">
    <value>Windows PowerShell IPC connect on process: {0} in AppDomain: {1} for User: {2}.</value>
</data>
<data name="PS_PROVIDEReventE_O_REMOTE_NAMEDPIPE_DISCONNECT" xml:space="preserve">
    <value>Windows PowerShell IPC disconnect on process: {0} in AppDomain: {1} for User: {2}.</value>
</data>
<data name="PS_PROVIDEReventE_A_RUNSPACE_PORT" xml:space="preserve">
    <value>Port resolved to {0}</value>
</data>
<data name="PS_PROVIDEReventE_A_RUNSPACE_APPNAME" xml:space="preserve">
    <value>AppName resolved to {0}</value>
</data>
<data name="PS_PROVIDEReventE_A_RUNSPACE_COMPUTERNAME" xml:space="preserve">
    <value>ComputerName resolved to {0}</value>
</data>
<data name="PS_PROVIDEReventE_A_RUNSPACE_SCHEME" xml:space="preserve">
    <value>Scheme is {0}</value>
</data>
<data name="PS_PROVIDEReventE_A_RUNSPACE_TEST" xml:space="preserve">
    <value>Test analytic message</value>
</data>
<data name="PS_PROVIDEReventE_A_RUNSPACE_WSMANCONNECTIONINFO" xml:space="preserve">
    <value>Connection Paramters are %n Connection URI: {0} %n Resource URI: {1} %n User: {2} %n OpenTimeout: {3} %n IdleTimeout: {4} %n CancelTimeout: {5} %n AuthenticationMechanism: {6} %n Thumb Print: {7} %n MaxUriRedirectionCount: {8} %n MaxReceivedDataSizePerCommand: {0}0 %n MaxReceivedObjectSize: {0}1</value>
</data>
<data name="PS_PROVIDEReventE_A_RUNSPACEPOOL_TRANSFER" xml:space="preserve">
    <value>Modifying activity Id and correlating</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_RCVDOBJ" xml:space="preserve">
    <value>Received object with Runspace Id: {0} Command Id: {1} Destination: {2} DataType: {3} TargetInterface: {4}</value>
</data>
<data name="PS_PROVIDEReventE_A_APPDOMAIN_UNHANDLED_EXCEPTION" xml:space="preserve">
    <value>An unhandled exception occurred in the appdomain. %nException Type: {0} %nException Message: {1} %nException StackTrace: {2}</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_ERROR" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id: {1}. WSMan reported an error with error code: {2}. %n Error message: {3} %n StackTrace: {4}</value>
</data>
<data name="PS_PROVIDEReventE_O_APPDOMAIN_UNHANDLED_EXCEPTION" xml:space="preserve">
    <value>An unhandled exception occurred in the appdomain. %nException Type: {0} %nException Message: {1} %nException StackTrace: {2}</value>
</data>
<data name="PS_PROVIDEReventE_O_TRANSPORT_ERROR" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id: {1}. WSMan reported an error with error code: {2}. %n Error message: {3} %n StackTrace: {4}</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_CONNECT" xml:space="preserve">
    <value>Runspace Id {0}. Establishing a connection using WSMan Create Shell</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_SHELL_CONNECT_CALLBACK" xml:space="preserve">
    <value>Runspace Id {0}. Callback received for WSMan Create Shell</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_SHELL_CLOSE" xml:space="preserve">
    <value>Runspace Id: {0}. Closing shell using WSManCloseShell</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_SHELL_CLOSE_CALLBACK" xml:space="preserve">
    <value>Runspace Id: {0}. Callback received for WSManCloseShell</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_SEND_DATA" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id: {1}. Sending data of size {2}</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_SEND_DATA_CALLBACK" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id: {1}. Callback received for WSManSendShellInputEx</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_RECEIVE_DATA" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id: {1}. Placing Receive request using WSManReceiveShellOutputEx</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_RECEIVE_DATA_CALLBACK" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id: {1}. Received Data of size {2}.</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_CMD_CONNECT" xml:space="preserve">
    <value>Runspace Id {0} Pipeline Id {1}. Establishing a command connection using WSManRunShellCommandEx</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_CMD_CONNECT_CALLBACK" xml:space="preserve">
    <value>Runspace Id {0} Pipeline Id {1}. Callback received for command connection</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_CMD_CLOSE" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id {1}. Closing transport for command</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_CMD_CLOSE_CALLBACK" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id {1}. Callback received for command close</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_SIGNAL" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id {1}. Sending signal with code {2} using WSManSignalShellEx</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_SIGNAL_CALLBACK" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id {1}. Callback received for WSManSignalShellEx</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_URI_REDIRECTION" xml:space="preserve">
    <value>Runspace Id: {0}. Connection is getting redirected to Uri: {1}</value>
</data>
<data name="PS_PROVIDEReventE_A_TRANSPORT_SERVER_SEND_DATA" xml:space="preserve">
    <value>Runspace Id: {0} Pipeline Id: {1}. Server is sending data of size {2} to client. DataType: {3} TargetInterface: {4}</value>
</data>
<data name="PS_PROVIDEReventE_A_CREATE_SERVER_REMOTESESSION" xml:space="preserve">
    <value>Request {0}. Creating a server remote session. UserName: {1} Custome Shell Id: {2}</value>
</data>
<data name="PS_PROVIDEReventE_A_REPORT_CONTEXT" xml:space="preserve">
    <value>Reporting context for request: {0} Context Reported: {0}</value>
</data>
<data name="PS_PROVIDEReventE_A_REPORT_OPERATION_COMPLETE" xml:space="preserve">
    <value>Reporting operation complete for request: {0} %n Error Code: {1} %n Error Message: {2} %n StackTrace: {3}</value>
</data>
<data name="PS_PROVIDEReventE_A_CREATE_COMMAND_REMOTESESSION" xml:space="preserve">
    <value>Shell Context {0}. Request Id {1}. Creating a commonad session for running a command.</value>
</data>
<data name="PS_PROVIDEReventE_A_STOP_COMMAND" xml:space="preserve">
    <value>Shell Context {0} Command Context {1} Request Id {2}. Stopping command.</value>
</data>
<data name="PS_PROVIDEReventE_A_SERVER_RECEIVED_DATA" xml:space="preserve">
    <value>Shell Context {0} Command Context {1} Request Id {2}. Received data from client.</value>
</data>
<data name="PS_PROVIDEReventE_A_SERVER_RECEIVE_REQUEST" xml:space="preserve">
    <value>Shell Context {0} Command Context {1} Request Id {2}. Client sent a receive request so that server can send data.</value>
</data>
<data name="PS_PROVIDEReventE_A_SERVER_CLOSE_OPERATION" xml:space="preserve">
    <value>Shell Context {0} Command Context {1} IsReceiveOperation {2}. Got close operation request.</value>
</data>
<data name="PS_PROVIDEReventE_A_LOAD_PSCUSTOMSHELL_ASSEMBLY" xml:space="preserve">
    <value>Loading assembly {0} for custom shell with shell Id {1}</value>
</data>
<data name="PS_PROVIDEReventE_A_LOAD_PSCUSTOMSHELL_TYPE" xml:space="preserve">
    <value>Loading type {0} for custom shell with shell Id {1}</value>
</data>
<data name="PS_PROVIDEReventE_A_RECEIVED_FRAGMENT" xml:space="preserve">
    <value>Received remoting fragment. %n %t Object Id: {0} %n %t Fragment Id: {1} %n %t Start Flag: {2} %n %t End Flag: {3} %n %t Payload Length: {4} %n %t Payload Data: {5}</value>
</data>
<data name="PS_PROVIDEReventE_A_SENT_FRAGMENT" xml:space="preserve">
    <value>Sent remoting fragment. %n %t Object Id: {0} %n %t Fragment Id: {1} %n %t Start Flag: {2} %n %t End Flag: {3} %n %t Payload Length: {4} %n %t Payload Data: {5}</value>
</data>
<data name="PS_PROVIDEReventE_A_SHUTTING_DOWN" xml:space="preserve">
    <value>Shutting down winrm service.</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_REHYDRATION_SUCCESS" xml:space="preserve">
    <value>Successfully rehydrated an object. %n %t Deserialized type name: {0} %n %t Rehydrated by casting to type: {1} %n %t Rehydrated object is of type: {2}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_REHYDRATION_FAILURE" xml:space="preserve">
    <value>Failed to rehydrated an object. %n %t Deserialized type name: {0} %n %t Rehydrated by casting to type: {1} %n %t Type cast exception: {2} %n %t Type cast inner exception: {3}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_DEPTH_OVERRIDE" xml:space="preserve">
    <value>Serialization depth has been overriden. %n %t Serialized type name: {0} %n %t Original depth: {1} %n %t Overriden depth: {2} %n %t Current depth below top level: {3}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_MODE_OVERRIDE" xml:space="preserve">
    <value>Serialization mode has been overriden. %n %t Serialized type name: {0} %n %t Overriden mode: {1}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_SCRIPT_PROPERTY_WITHOUT_RUNSPACE" xml:space="preserve">
    <value>Serialization of a script property has been skipped, because there is no runspace to use for evaluation of the property. %n %t Property name: {0} %n %t Property owner's type name: {1} %n %t Getter script: {2}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_PROPERTY_GETTER_FAILED" xml:space="preserve">
    <value>Serialization of a property has been skipped, because property getter failed. %n %t Property name: {0} %n %t Property owner's type name: {1} %n %t Exception from property getter: {2} %n %t Inner exception from property getter: {3}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_ENUMERATION_FAILED" xml:space="preserve">
    <value>Serialization of an enumerable object might not be complete, because object being enumerated threw an exception. %n %t Type of object being enumerated: {0} %n %t Exception: {1}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_TOSTRING_FAILED" xml:space="preserve">
    <value>Serialization called object's ToString method which failed. %n %t Type of object: {0} %n %t Exception: {1}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_MAX_DEPTH_WHEN_SERIALIZING" xml:space="preserve">
    <value>Maximum depth below top level has been reached, forcing object to be serialized as strings. %n %t Object type at max depth: {0} %n %t Property name at max depth: {1} %n %t Depth: {2}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_XMLEXCEPTION_WHEN_DESERIALIZING" xml:space="preserve">
    <value>XmlException has been thrown by the deserializer (most likely indicating incorrect clixml format). %n %t Line number: {0} Line position: {1} %n %t Exception: {2}</value>
</data>
<data name="PS_PROVIDEReventE_A_SERIALIZER_SPECIFIC_PROPERTY_MISSING" xml:space="preserve">
    <value>Serialization of specified properties failed, because one of the specified properties was missing. %n %t Type of object: {0} %n %t Property name: {1}</value>
</data>
<data name="PS_PROVIDEReventE_O_PowershellConsoleStartupStart" xml:space="preserve">
    <value>PowerShell console is starting up</value>
</data>
<data name="PS_PROVIDEReventE_O_PowershellConsoleStartupStop" xml:space="preserve">
    <value>PowerShell console is ready for user input</value>
</data>
<data name="PS_PROVIDEReventE_D_DebugMessage" xml:space="preserve">
    <value>{0}</value>
</data>
<data name="PS_PROVIDEReventE_D_Powershell_ErrorRecord" xml:space="preserve">
    <value>Tracing ErrorRecord: %n Message: {0} %n CategoryInfo.Category: {1} %n CategoryInfo.Reason : {2} %n CategoryInfo.TargetName : {3} %n FullyQualifiedErrorId: {4} %n Exception Details: %n Message : {5} %n Stack Trace: {6} %n InnerException {7} %n</value>
</data>
<data name="PS_PROVIDEReventE_D_Powershell_Exception" xml:space="preserve">
    <value>Exception: %n Message: {0} %n StackTrace: {1} %n InnerException : {2} %n</value>
</data>
<data name="PS_PROVIDEReventE_O_Powershell_PSObject" xml:space="preserve">
    <value>Tracing PSObject</value>
</data>
<data name="PS_PROVIDEReventE_D_Powershell_Job" xml:space="preserve">
    <value>Tracing Job: %n Id: {0} %n InstanceId: {1} %n Name: {2} %n Location: {3} %n State: {4} %n Command: {5} %n</value>
</data>
<data name="PS_PROVIDEReventE_D_MESSAGE" xml:space="preserve">
    <value>Trace Information: %n {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_MESSAGE2" xml:space="preserve">
    <value>Trace Information: %n {0} {1}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginStartWorkflowApplication" xml:space="preserve">
    <value>BEGIN ImportWorkflowCommand::StartWorkflowApplication. Starting invocation of workflow function. Tracking Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndStartWorkflowApplication" xml:space="preserve">
    <value>END ImportWorkflowCommand::StartWorkflowApplication. Ending invocation of workflow function. Tracking Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginCreateNewJob" xml:space="preserve">
    <value>BEGIN Creating new job in ImportWorkflowCommand::StartWorkflowApplication. Tracking Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndCreateNewJob" xml:space="preserve">
    <value>END Creating new job in ImportWorkflowCommand::StartWorkflowApplication. Tracking Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PTrackingGuidContainerParentJobCorrelation" xml:space="preserve">
    <value>END Creating new job in ImportWorkflowCommand::StartWorkflowApplication. Tracking Guid {0} : ContainerParentJob Guid {1}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginJobLogic" xml:space="preserve">
    <value>BEGIN JobLogic ContainerParentJob Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndJobLogic" xml:space="preserve">
    <value>END JobLogic ContainerParentJob Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginWorkflowExecution" xml:space="preserve">
    <value>BEGIN WorkflowExecution ContainerParentJob Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndWorkflowExecution" xml:space="preserve">
    <value>END WorkflowExecution ContainerParentJob Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PChildWorkflowJobAddition" xml:space="preserve">
    <value>WorkflowJob with Guid {0} added to ContainerParentJob with Guid {1}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PProxyJobRemoteJobAssociation" xml:space="preserve">
    <value>ProxyJob with Guid {0} associated with remote ContainerParentJob with Guid {1}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginContainerParentJobExecution" xml:space="preserve">
    <value>BEGIN Execution of ContainerParentJob with Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndContainerParentJobExecution" xml:space="preserve">
    <value>END Execution of ContainerParentJob with Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginProxyJobExecution" xml:space="preserve">
    <value>BEGIN Execution of Proxy Job with Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndProxyJobExecution" xml:space="preserve">
    <value>END Execution of Proxy Job with Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginProxyJobEventHandler" xml:space="preserve">
    <value>BEGIN StateChanged event handler for Proxy Job with Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndProxyJobEventHandler" xml:space="preserve">
    <value>END StateChanged event handler for Proxy Job with Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginProxyChildJobEventHandler" xml:space="preserve">
    <value>BEGIN StateChanged event handler for Proxy Child Job with Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndProxyChildJobEventHandler" xml:space="preserve">
    <value>END StateChanged event handler for Proxy Child Job with Guid {0}</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PBeginRunGarbageCollection" xml:space="preserve">
    <value>BEGIN Running garbage collection</value>
</data>
<data name="PS_PROVIDEReventE_D_M3PEndRunGarbageCollection" xml:space="preserve">
    <value>END Running garbage collection</value>
</data>
<data name="PS_PROVIDEReventE_O_M3PPERSISTENCE_STORE_MAXSIZE_REACHED" xml:space="preserve">
    <value>Persistence store has reached its maximum specified size</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEExecuteScript" xml:space="preserve">
    <value>Windows PowerShell ISE has started to run script file {0}.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEExecuteSelection" xml:space="preserve">
    <value>Windows PowerShell ISE has started to run a user-selected script from file {0}.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEStopCommand" xml:space="preserve">
    <value>Windows PowerShell ISE is stopping the current command.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEResumeDebugger" xml:space="preserve">
    <value>Windows PowerShell ISE is resuming the debugger.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEStopDebugger" xml:space="preserve">
    <value>Windows PowerShell ISE is stopping the debugger.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEDebuggerStepInto" xml:space="preserve">
    <value>Windows PowerShell ISE is stepping into debugging.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEDebuggerStepOver" xml:space="preserve">
    <value>Windows PowerShell ISE is stepping over debugging.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEDebuggerStepOut" xml:space="preserve">
    <value>Windows PowerShell ISE is stepping out of debugging.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEEnableAllBreakpoints" xml:space="preserve">
    <value>Windows PowerShell ISE is enabling all breakpoints.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEDisableAllBreakpoints" xml:space="preserve">
    <value>Windows PowerShell ISE is disabling all breakpoints.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISERemoveAllBreakpoints" xml:space="preserve">
    <value>Windows PowerShell ISE is removing all breakpoints.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISESetBreakpoint" xml:space="preserve">
    <value>Windows PowerShell ISE is setting the breakpoint at line #: {0} of file {1}.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISERemoveBreakpoint" xml:space="preserve">
    <value>Windows PowerShell ISE is removing the breakpoint on line #: {0} of file {1}.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEEnableBreakpoint" xml:space="preserve">
    <value>Windows PowerShell ISE is enabling the breakpoint on line #: {0} of file {1}.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEDisableBreakpoint" xml:space="preserve">
    <value>Windows PowerShell ISE is disabling the breakpoint on line #: {0} of file {1}.</value>
</data>
<data name="PS_PROVIDEReventE_O_ISEHitBreakpoint" xml:space="preserve">
    <value>Windows PowerShell ISE has hit a breakpoint on line #: {0} of file {1}.</value>
</data>
</root>
